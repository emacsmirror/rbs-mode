# Foo
class Foo[U, T] # bar
  include Mod1
  extend Mod2
  prepend Mod3

  attr_reader foo: Integer
  attr_writer bar: bool?
  attr_accessor baz: 1 | 2

  def self.create: (name: Hash, *untyped args) -> instance
  def self?.exist: () -> bool
  def name: () -> String
  def key?: () -> bool
          | super
  alias id name
  alias self.id self.name

  public

  private
end

module Foo::Bar < Baz
end

type Foo::bar = "string" | 100 | true | false | nil

Foo::Bar: String
::YES: String

$LOAD_PATH: Array[String]
